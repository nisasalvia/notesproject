{"ast":null,"code":"var _jsxFileName = \"C:\\\\NAFISA\\\\kuliah\\\\semester 6\\\\PSO\\\\Final Project\\\\notesproject\\\\notesproject\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\n// import notes from '../assets/data.js'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [note, setNote] = useState({});\n  useEffect(() => {\n    let getNote = async () => {\n      if (id === 'new') return;\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      console.log(data);\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n  let createNote = async () => {\n    await fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let updateNote = async () => {\n    await fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let deleteNote = async () => {\n    await fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE'\n    });\n    navigate('/');\n  };\n  let handleSubmit = () => {\n    if (id !== 'new' && !note.body) {\n      deleteNote();\n    } else if (id !== 'new') {\n      updateNote();\n    } else if (id === 'new' && note !== null) {\n      createNote();\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-body\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => {\n          setNote({\n            ...note,\n            'body': e.target.value\n          });\n        },\n        value: note.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"wX5b2UOrVYpxH6m13Qu93oRSpIg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","id","navigate","note","setNote","getNote","response","fetch","data","json","console","log","createNote","method","headers","body","JSON","stringify","Date","updateNote","deleteNote","handleSubmit","className","children","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/NAFISA/kuliah/semester 6/PSO/Final Project/notesproject/notesproject/src/pages/NotePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams,useNavigate,Link } from 'react-router-dom'\r\n// import notes from '../assets/data.js'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = () => {\r\n  let { id }  = useParams();\r\n  let navigate = useNavigate()\r\n  let [note, setNote] = useState({})\r\n  useEffect(() => {\r\n    let getNote = async () => {\r\n      if (id === 'new') return\r\n      let response = await fetch(`/api/notes/${id}`)\r\n      let data = await response.json()\r\n      console.log(data)\r\n      setNote(data)\r\n    }\r\n    getNote()\r\n  }, [id])\r\n\r\n  let createNote = async () => {\r\n    await fetch(`/api/notes/create/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({...note, 'updated': new Date()})\r\n    })\r\n  }\r\n\r\n  let updateNote = async () => {\r\n    await fetch(`/api/notes/${id}/update/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({...note, 'updated': new Date()})\r\n    })\r\n  }\r\n\r\n  let deleteNote = async () => {\r\n    await fetch(`/api/notes/${id}/delete/`, {\r\n      method: 'DELETE'\r\n    })\r\n    navigate('/')\r\n  }\r\n\r\n  let handleSubmit = () => {\r\n    if (id !== 'new' && !note.body) {\r\n      deleteNote()\r\n    } else if (id !== 'new') {\r\n      updateNote()\r\n    } else if (id ==='new' && note !== null) {\r\n      createNote()\r\n    }\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className=\"note-header\">\r\n        <h3>\r\n          <Link to='/'>\r\n            <ArrowLeft onClick={handleSubmit} />\r\n          </Link>\r\n        </h3>\r\n        {id !== 'new' ? (\r\n          <button onClick={deleteNote}>Delete</button>\r\n        ):(\r\n          <button onClick={handleSubmit}>Save</button>\r\n        )}\r\n      </div>\r\n      <div className=\"note-body\">\r\n        <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} value={note.body}>  \r\n        </textarea>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAACC,WAAW,EAACC,IAAI,QAAQ,kBAAkB;AAC7D;AACA,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,IAAI;IAAEC;EAAG,CAAC,GAAIT,SAAS,CAAC,CAAC;EACzB,IAAIU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC5B,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClCD,SAAS,CAAC,MAAM;IACd,IAAIe,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAIJ,EAAE,KAAK,KAAK,EAAE;MAClB,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAcN,EAAE,EAAE,CAAC;MAC9C,IAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBJ,OAAO,CAACI,IAAI,CAAC;IACf,CAAC;IACDH,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;EAER,IAAIW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAML,KAAK,CAAC,oBAAoB,EAAE;MAChCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,GAAGd,IAAI;QAAE,SAAS,EAAE,IAAIe,IAAI,CAAC;MAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,IAAIC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMZ,KAAK,CAAC,cAAcN,EAAE,UAAU,EAAE;MACtCY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,GAAGd,IAAI;QAAE,SAAS,EAAE,IAAIe,IAAI,CAAC;MAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,IAAIE,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMb,KAAK,CAAC,cAAcN,EAAE,UAAU,EAAE;MACtCY,MAAM,EAAE;IACV,CAAC,CAAC;IACFX,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,IAAImB,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIpB,EAAE,KAAK,KAAK,IAAI,CAACE,IAAI,CAACY,IAAI,EAAE;MAC9BK,UAAU,CAAC,CAAC;IACd,CAAC,MAAM,IAAInB,EAAE,KAAK,KAAK,EAAE;MACvBkB,UAAU,CAAC,CAAC;IACd,CAAC,MAAM,IAAIlB,EAAE,KAAI,KAAK,IAAIE,IAAI,KAAK,IAAI,EAAE;MACvCS,UAAU,CAAC,CAAC;IACd;IACAV,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEJ,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBzB,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BzB,OAAA;QAAAyB,QAAA,eACEzB,OAAA,CAACJ,IAAI;UAAC8B,EAAE,EAAC,GAAG;UAAAD,QAAA,eACVzB,OAAA,CAACF,SAAS;YAAC6B,OAAO,EAAEJ;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACJ5B,EAAE,KAAK,KAAK,gBACXH,OAAA;QAAQ2B,OAAO,EAAEL,UAAW;QAAAG,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAE5C/B,OAAA;QAAQ2B,OAAO,EAAEJ,YAAa;QAAAE,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN/B,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBzB,OAAA;QAAUgC,QAAQ,EAAGC,CAAC,IAAK;UAAC3B,OAAO,CAAC;YAAC,GAAGD,IAAI;YAAE,MAAM,EAAC4B,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC,CAAC;QAAA,CAAE;QAACA,KAAK,EAAE9B,IAAI,CAACY;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA7B,EAAA,CAzEKD,QAAQ;EAAA,QACEP,SAAS,EACRC,WAAW;AAAA;AAAAyC,EAAA,GAFtBnC,QAAQ;AA2Ed,eAAeA,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}